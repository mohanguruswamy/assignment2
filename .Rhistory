load("./data/samsungData.rda")
# the names of samsungData contain invalid characters, clean them up
names(samsungData) <- make.names(names(samsungData), unique=TRUE)
# convert subject and activity to factors
samsungData$subject <- as.factor(samsungData$subject)
samsungData$activity <- as.factor(samsungData$activity)
# We have 21 subjects, so to divide the data into 3 (train, validate, test) they can have 7 each
# create training set (must include the data from subjects 1, 3, 5, and 6)
ssdTrain <- subset(samsungData, subject %in% c(1,3,5,6,7,8,11))
# create a validation set
ssdVal <- subset(samsungData, subject %in% c(14,15,16,17,19,21,22))
# create test set (must be from at least subjects 27, 28, 29, and 30)
ssdTestDONOTUSE <- subset(samsungData, subject %in% c(23,25,26,27,28,29,30))
nrow(ssdTestDONOTUSE) + nrows(ssdTrain) + nrows(ssdVal)
nrow(ssdTestDONOTUSE) + nrow(ssdTrain) + nrow(ssdVal)
library(tree)
tree1 <- tree(activity ~ .,data=ssdTrain)
summary(tree1)
plot(ssdTrain$fBodyAccJerk.std...X, ssdTrain$activity)
plot(ssdTrain$tBodyAccJerk.max...X, ssdTrain$activity)
plot(tree1)
text(tree1)
?text
plot(tree1)
text(tree1, use.n=TRUE, all=TRUE, cex=.8)
text(tree1, all=TRUE, cex=.8)
plot(tree1)
text(tree1, all=TRUE, cex=.8)
library(rpart)
tree.rp <- rpart(activity ~ ., data=ssdTrain)
summary(rpart)
summary(tree.rp)
plot(tree.rp, title="rpart initial tree")
plot(tree.rp, main="rpart initial tree")
text(tree.rp, all=TRUE, cex=.8)
plot(tree1, main="initial tree (tree lib)")
text(tree1, all=TRUE, cex=.8)
plot(tree1, main="initial tree (tree lib)")
plot(tree1, main="initial tree (tree lib)", title="lk")
plot(tree1, main="initial tree (tree lib)")
title("initial")
title("initial tree (tree library)")
plot(tree1)  # for some reason the 'main' argument doesn't work
title("initial tree (tree library)")
text(tree1, all=TRUE, cex=.8)
plot(tree.rp, main="initial tree (rpart library)")
text(tree.rp, all=TRUE, cex=.8)
plot(tree.rp, main="initial tree (rpart library)")
text(tree.rp, cex=.8)
plot(tree1)  # for some reason the 'main' argument doesn't work
title("initial tree (tree library)")
text(tree1, cex=.8)
plot(tree.rp, main="initial tree (rpart library)")
text(tree.rp, cex=.8)
par(mar=c(0.5,0.5,0.5,0.5))
plot(tree.rp, main="initial tree (rpart library)")
text(tree.rp, cex=.8)
par(mar=c(2,0.5,0.5,1))
plot(tree.rp, main="initial tree (rpart library)")
text(tree.rp, cex=.8)
plotcp(tree.rp)
pfit<- prune(tree.rp, cp=tree.rp$cptable[which.min(tree.rp$cptable[,"xerror"]),"CP"])
plot(pfit, main="pruned rpart tree")
text(tree.rp, cex=.8)
text(pfit, cex=.8)
plot(pfit, main="pruned rpart tree")
text(pfit, cex=.8)
plot(pfit, main="pruned rpart tree")
text(pfit, cex=.8)
library(randomForest)
rf <- randomForest(activity ~ ., data=ssdTrain)
summary(rf)
plot(rf)
print(rf)
importance(rf)
?rbind
ssdTrainVal <- rbind(ssdTrain, ssdVal)
2474+2220
ssdTrainVal2 <- subset(rfTrainVal, select = -subject)
ssdTrainVal2 <- subset(rfTrainVal, select = -rfTrainVal$subject)
ssdTrainVal2 <- ssdTrainVal[, !(colnames(ssdTrainVal) %in% c("subject"))]
ssdTrainVal <- ssdTrainVal[, !(colnames(ssdTrainVal) %in% c("subject"))]
rm(ssdTrainVal2)
rf.trainVal <- randomForest(activity ~ ., data=ssdTrainVal)
print(rf.trainVal)
ssdTrainVal <- rbind(ssdTrain, ssdVal)
dim(samsungData)
unique(samsungData$subject)
length(unique(samsungData$subject))
plot(samsungData[,1])
length(samsungData[,1:561] > 1)
sum(samsungData[,1:561] > 1)
sum(samsungData[,1:561] < 1)
sum(samsungData[,1:561] < -1)
ssdTrainVal <- rbind(ssdTrain, ssdVal)
rf.trainVal <- randomForest(activity ~ ., data=ssdTrainVal)
library(randomForest)
ssdTrainVal <- rbind(ssdTrain, ssdVal)
rf.trainVal <- randomForest(activity ~ ., data=ssdTrainVal)
print(rf.trainVal)
plot(samsungdata[,1:100])
plot(samsungData[,1:100])
for i in 2:100{
points(samsungData[,i])
}
for (i in 2:100) {
points(samsungData[,i])
}
plot(samsungData[,1])
for (i in 2:100) {
points(samsungData[,i])
}
plot(samsungData[,1])
for (i in 2:10) {
points(samsungData[,i], cex=0.1, col="red")
}
